From fdb5b42b530325273bc2af0f72739bcd3063f0ae Mon Sep 17 00:00:00 2001
From: Jan Janssen <jan-janssen@users.noreply.github.com>
Date: Tue, 29 Jul 2025 10:54:05 +0200
Subject: [PATCH] ignore errors when reading files - uf8 compatibility (#71)

* ignore errors when reading files - uf8 compatibility

* [pre-commit.ci] auto fixes from pre-commit.com hooks

for more information, see https://pre-commit.ci

---------

Co-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>
---
 pyiron_vasp/dft/bader.py           | 2 +-
 pyiron_vasp/dft/volumetric.py      | 2 +-
 pyiron_vasp/vasp/parser/oszicar.py | 2 +-
 pyiron_vasp/vasp/parser/outcar.py  | 4 ++--
 pyiron_vasp/vasp/parser/report.py  | 2 +-
 pyiron_vasp/vasp/procar.py         | 2 +-
 pyiron_vasp/vasp/structure.py      | 4 ++--
 7 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/pyiron_vasp/dft/bader.py b/pyiron_vasp/dft/bader.py
index fa83fbcc..69cb42fc 100644
--- a/pyiron_vasp/dft/bader.py
+++ b/pyiron_vasp/dft/bader.py
@@ -123,7 +123,7 @@ def parse_charge_vol_file(structure, filename="ACF.dat"):
         tuple: charges and volumes
 
     """
-    with open(filename) as f:
+    with open(filename, errors="ignore") as f:
         lines = f.readlines()
         charges = np.genfromtxt(lines[2:], max_rows=len(structure))[:, 4]
         volumes = np.genfromtxt(lines[2:], max_rows=len(structure))[:, 6]
diff --git a/pyiron_vasp/dft/volumetric.py b/pyiron_vasp/dft/volumetric.py
index 5c95061d..9673d897 100644
--- a/pyiron_vasp/dft/volumetric.py
+++ b/pyiron_vasp/dft/volumetric.py
@@ -357,7 +357,7 @@ def read_cube_file(self, filename="cube_file.cube"):
             filename (str): Filename to parse
 
         """
-        with open(filename, "r") as f:
+        with open(filename, "r", errors="ignore") as f:
             lines = f.readlines()
             n_atoms = int(lines[2].strip().split()[0])
             cell_data = np.genfromtxt(lines[3:6])
diff --git a/pyiron_vasp/vasp/parser/oszicar.py b/pyiron_vasp/vasp/parser/oszicar.py
index 13b0dae3..88e99703 100644
--- a/pyiron_vasp/vasp/parser/oszicar.py
+++ b/pyiron_vasp/vasp/parser/oszicar.py
@@ -31,7 +31,7 @@ def __init__(self):
         self.parse_dict = dict()
 
     def from_file(self, filename="OSZICAR"):
-        with open(filename, "r") as f:
+        with open(filename, "r", errors="ignore") as f:
             lines = f.readlines()
         self.parse_dict["energy_pot"] = self.get_energy_pot(lines)
 
diff --git a/pyiron_vasp/vasp/parser/outcar.py b/pyiron_vasp/vasp/parser/outcar.py
index f3dfce16..537b292c 100644
--- a/pyiron_vasp/vasp/parser/outcar.py
+++ b/pyiron_vasp/vasp/parser/outcar.py
@@ -51,7 +51,7 @@ def from_file(self, filename="OUTCAR"):
             filename (str): Filename of the OUTCAR file to parse
 
         """
-        with open(filename, "r") as f:
+        with open(filename, "r", errors="ignore") as f:
             lines = f.readlines()
         energies = self.get_total_energies(filename=filename, lines=lines)
         energies_int = self.get_energy_without_entropy(filename=filename, lines=lines)
@@ -1229,6 +1229,6 @@ def _get_lines_from_file(filename, lines=None):
         list: list of lines
     """
     if lines is None:
-        with open(filename, "r") as f:
+        with open(filename, "r", errors="ignore") as f:
             lines = f.readlines()
     return lines
diff --git a/pyiron_vasp/vasp/parser/report.py b/pyiron_vasp/vasp/parser/report.py
index fe6d15d1..630f9edd 100644
--- a/pyiron_vasp/vasp/parser/report.py
+++ b/pyiron_vasp/vasp/parser/report.py
@@ -32,7 +32,7 @@ def from_file(self, filename="REPORT"):
         Args:
             filename (str): Path to the file that needs to be parsed
         """
-        with open(filename, "r") as f:
+        with open(filename, "r", errors="ignore") as f:
             lines = f.readlines()
         rel_lines = [
             lines[i + 2] for i, line in enumerate(lines) if "Blue_moon" in line
diff --git a/pyiron_vasp/vasp/procar.py b/pyiron_vasp/vasp/procar.py
index b41f2054..78dafef0 100644
--- a/pyiron_vasp/vasp/procar.py
+++ b/pyiron_vasp/vasp/procar.py
@@ -30,7 +30,7 @@ def __init__(self):
         self.dos_dict = OrderedDict()
 
     def from_file(self, filename):
-        with open(filename, "r") as f:
+        with open(filename, "r", errors="ignore") as f:
             es_obj = ElectronicStructure()
             lines = f.readlines()
             details_trigger = "# of k-points:"
diff --git a/pyiron_vasp/vasp/structure.py b/pyiron_vasp/vasp/structure.py
index c08c7afd..b2b3d124 100644
--- a/pyiron_vasp/vasp/structure.py
+++ b/pyiron_vasp/vasp/structure.py
@@ -70,7 +70,7 @@ def get_species_list_from_potcar(filename="POTCAR"):
     """
     trigger = "VRHFIN ="
     species_list = list()
-    with open(filename) as potcar_file:
+    with open(filename, errors="ignore") as potcar_file:
         lines = potcar_file.readlines()
         for line in lines:
             line = line.strip()
@@ -436,7 +436,7 @@ def manip_contcar(filename, new_filename, add_pos):
     actual_struct = read_atoms(filename)
     n = 0
     direct = True
-    with open(filename, "r") as f:
+    with open(filename, "r", errors="ignore") as f:
         lines = f.readlines()
         for line in lines:
             if "Direct" in line or "Cartesian" in line:
